[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "ModelForm",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "migrations.0001_initial",
        "description": "migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Task\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TodoappConfig",
        "kind": 6,
        "importPath": "apps",
        "description": "apps",
        "peekOfCode": "class TodoappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'todoApp'",
        "detail": "apps",
        "documentation": {}
    },
    {
        "label": "TaskForm",
        "kind": 6,
        "importPath": "forms",
        "description": "forms",
        "peekOfCode": "class TaskForm(forms.ModelForm):\n    class Meta:\n        model = Task\n        fields=\"__all__\"",
        "detail": "forms",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class Task(models.Model):\n    title=models.CharField(max_length=200)\n    complete=models.BooleanField(default=False)\n    created=models.DateTimeField(auto_now_add=True)\n    def __str__ (self):\n        return self.title",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "urls",
        "description": "urls",
        "peekOfCode": "urlpatterns = [\n    path('',views.list,name=\"list\"),\n    path('tasks/update/<str:pk>/',views.update,name=\"update\"),\n    path('tasks/delete/<str:pk>/',views.delete,name=\"delete\"),\n]",
        "detail": "urls",
        "documentation": {}
    },
    {
        "label": "list",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def list(request):\n    tasks=Task.objects.all()\n    form=TaskForm()\n    if request.method==\"POST\":\n        form=TaskForm(request.POST)\n        if form.is_valid():\n            form.save()\n        return redirect (\"/\")\n    context= {'tasks':tasks,'form':form}\n    return render(request,\"tasks/list.html\",context)",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def update(request,pk):\n    tasks=Task.objects.get(id=pk)\n    form=TaskForm(instance=tasks)\n    if request.method==\"POST\":\n        form=TaskForm(request.POST,instance=tasks)\n        if form.is_valid():\n            form.save()\n        return redirect (\"/\")\n    data={\n        'form':form",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "delete",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def delete(request, pk):\n    item=Task.objects.get(id=pk)\n    if request.method==\"POST\":\n        item.delete()\n        return redirect('/')\n    data  = {\n    'item':item}\n    return render(request,\"tasks/delete.html\",data)",
        "detail": "views",
        "documentation": {}
    }
]